{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","App.js","index.js","components/Filter/Filter.module.scss","components/ContactsList/ContactList.module.scss"],"names":["module","exports","Filter","list","deleteContact","className","styles","map","id","name","number","item","type","onClick","button","ContactForm","state","onChangeInput","event","setState","currentTarget","value","onSubmitForm","props","contacts","addContact","preventDefault","find","contact","alert","length","onResetForm","form","onSubmit","this","label","input","onChange","Component","ContactList","changeFilter","App","filter","uuidv4","normalizedList","normalized","toLowerCase","includes","prevState","contactList","localStorage","getItem","parseContacts","JSON","parse","prevProps","nextState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f790b589.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2LUMH\",\"label\":\"ContactForm_label__5NB9B\",\"input\":\"ContactForm_input__2XJGZ\",\"button\":\"ContactForm_button__3b6Sj\"};","import React from 'react';\r\nimport styles from './Filter.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ list, deleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {list.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.item}>\r\n          <span>{name}</span>\r\n          <span>{number}</span>\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => deleteContact(id)}\r\n            className={styles.button}\r\n          >\r\n            X\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  list: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onChangeInput = event => {\r\n    this.setState({\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  onSubmitForm = event => {\r\n    const { name, number } = this.state;\r\n    const { contacts, addContact } = this.props;\r\n    event.preventDefault();\r\n\r\n    const findContact = contacts.find(contact => contact.name === name);\r\n    if (findContact) {\r\n      alert(`${name} is already in the contact`);\r\n    } else if (number.length !== 0) {\r\n      addContact(name, number);\r\n      this.onResetForm();\r\n    }\r\n  };\r\n\r\n  onResetForm = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.onSubmitForm}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.onChangeInput}\r\n          ></input>\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.onChangeInput}\r\n          ></input>\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport styles from './ContactList.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ value, changeFilter }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name:\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={changeFilter}\r\n      className={styles.input}\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nContactList.propTypes = {\r\n  value: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './styles.css';\r\nimport Filter from './components/Filter';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactsList';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contactList = localStorage.getItem('contacts');\r\n    const parseContacts = JSON.parse(contactList);\r\n    if (this.state.contacts.length > 0) {\r\n      this.setState({ contacts: parseContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    let nextState = this.state.contacts;\r\n    if (nextState !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(nextState));\r\n    }\r\n  }\r\n\r\n  addContact = (name, number) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    this.setState({\r\n      contacts: [contact, ...this.state.contacts],\r\n    });\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({\r\n      filter: event.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  normalizedList = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalized = filter.toLowerCase();\r\n    const filterContacts = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalized),\r\n    );\r\n\r\n    return filterContacts;\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n      filter: '',\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"phoneBook\">\r\n        <h1 className=\"main-title\">Phonebook</h1>\r\n        <ContactForm\r\n          contacts={this.state.contacts}\r\n          addContact={this.addContact}\r\n        />\r\n\r\n        <h2 className=\"second-title\">Contacts</h2>\r\n        <ContactList\r\n          value={this.state.filter}\r\n          changeFilter={this.changeFilter}\r\n        />\r\n        <Filter\r\n          list={this.normalizedList()}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Filter_list__1rujm\",\"item\":\"Filter_item__wg7ap\",\"button\":\"Filter_button__16IIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactList_label__3S6Mc\",\"input\":\"ContactList_input__1tBFu\"};"],"sourceRoot":""}